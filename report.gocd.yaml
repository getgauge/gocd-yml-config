common:
  install_gauge_linux: &install_gauge_linux
    - exec:
        command: /bin/sh
        arguments:
          - -c
          - mkdir -p $GAUGE_ROOT/bin && unzip -o gauge-linux.x86_64.zip -d $GAUGE_ROOT/bin
  install_gauge_windows: &install_gauge_windows
    - exec:
        command: cmd
        arguments:
          - /c
          - "unzip -o gauge-windows.x86_64.zip -d %GAUGE_ROOT%"
  install_language_runner_linux: &install_language_runner_linux
    - exec:
        working_directory: deploy
        command: /bin/sh
        arguments:
          - -c
          - (version=$(ls gauge-#{language}-*#{linux_env}.zip | sed "s/^gauge-#{language}-\([^;]*\)#{linux_env}.zip/\1/"); $GAUGE_PREFIX/bin/gauge install "#{language}" -f gauge-#{language}-$version#{linux_env}.zip)
  install_language_runner_windows: &install_language_runner_windows
    - exec:
        working_directory: deploy
        command: cmd
        arguments:
          -  /c
          - "for %f in (gauge-#{language}-*#{windows_env}.zip) do %GAUGE_ROOT%/gauge install #{language} -f %f"
  install_report_plugin_linux: &install_report_plugin_linux
    - exec:
        working_directory: deploy
        command: /bin/sh
        arguments:
          - -c
          - (version=$(ls "#{report_plugin}"-*-linux.x86_64.zip | sed "s/^#{report_plugin}-\([^;]*\)-linux.x86_64.zip/\1/"); $GAUGE_PREFIX/bin/gauge install "#{report_plugin}" -f "#{report_plugin}"-$version-linux.x86_64.zip)
  install_report_plugin_windows: &install_report_plugin_windows
    - exec:
        working_directory: deploy
        command: cmd
        arguments:
          - /c
          - "for %f in (#{report_plugin}-*-windows.x86_64.zip) do %GAUGE_ROOT%/gauge install #{report_plugin} -f %f"
  run_fts_command_linux: &run_fts_command_linux
    - exec:
        working_directory: gauge-tests
        command: /bin/sh
        arguments:
          - -c
          - PATH=/tmp/bin:$PATH mvn -q clean install -Denv=ci-#{language} -Dtags=#{report_plugin} -DinParallel=true -Dnodes=2
  run_fts_command_windows: &run_fts_command_windows
    - exec:
        working_directory: gauge-tests
        command: cmd
        arguments:
          - /c
          - path %GAUGE_ROOT%;%PATH% & gauge version & mvn clean install -q -Denv=ci-#{language} -Dtags=#{report_plugin} -DinParallel=true -Dnodes=2
  build_artifacts: &build_artifacts
    - build:
        source: gauge-tests/reports-#{language}/#{report_plugin}/*
        destination: "#{report_plugin}"
    - build:
        source: gauge-tests/testLogs
        destination: test-logs
  materials: &materials
    gauge-tests:
      git: https://github.com/getgauge/gauge-tests.git
      destination: gauge-tests
    package:
      pipeline: "#{pipeline}"
      stage: "#{stage}"
    gauge:
      pipeline: Gauge-Build
      stage: windows
    report:
      pipeline: "#{report_pipeline}"
      stage: package
  environment_variables_linux: &environment_variables_linux
    GOPATH: /tmp
    GOBIN: /tmp/bin
    GAUGE_ROOT: /tmp
    GAUGE_PREFIX: /tmp
  environment_variables_windows: &environment_variables_windows
    GOPATH: C:/gauge/
    GOBIN: C:/gauge/bin
    GAUGE_ROOT: C:/gauge_root
    GAUGE_HOME: C:/gauge-plugins
  environment_variables: &environment_variables
    enable_multithreading: true
    language: java
  fetch_gauge_artifact_linux: &fetch_gauge_artifact_linux
    - fetch:
        pipeline: Gauge-Build
        stage: windows
        job: sign
        source: test_installers/gauge-linux.x86_64.zip
        is_file: yes
  fetch_gauge_artifact_windows: &fetch_gauge_artifact_windows
    - fetch:
        pipeline: Gauge-Build
        stage: windows
        job: sign
        source: test_installers/gauge-windows.x86_64.zip
        is_file: yes
  fetch_language_artifact: &fetch_language_artifact
    - fetch:
        pipeline:  "#{pipeline}"
        stage: "#{stage}"
        job: "#{job}"
        source: "#{source}"
  fetch_report_plugin_artifact: &fetch_report_plugin_artifact
    - fetch:
        pipeline: "#{report_pipeline}"
        stage: package
        job: package
        source: deploy
  linux_job: &linux_job
    environment_variables: *environment_variables_linux
    elastic_profile_id: centos-all
    tasks:
      - *fetch_gauge_artifact_linux
      - *install_gauge_linux
      - *fetch_language_artifact
      - *install_language_runner_linux
      - *fetch_report_plugin_artifact
      - *install_report_plugin_linux
      - *run_fts_command_linux
    artifacts: *build_artifacts
  windows_job: &windows_job
    environment_variables: *environment_variables_windows
    elastic_profile_id: windows-all
    tasks:
      - *fetch_gauge_artifact_windows
      - *install_gauge_windows
      - *fetch_language_artifact
      - *install_language_runner_windows
      - *fetch_report_plugin_artifact
      - *install_report_plugin_windows
      - *run_fts_command_windows
  specs_stage: &specs_stage
    - specs:
        clean_workspace: true
        jobs:
          linux: *linux_job
          windows: *windows_job

pipelines:
  HTML-Report-Java:
    group: Report_Plugins
    parameters:
      pipeline: Java-Build
      stage: package
      job: distro
      source: deploy
      language: java
      report_pipeline: HTML_Report
      report_plugin: html-report
      linux_env: -linux.x86_64
      windows_env: -windows.x86_64
    materials: *materials
    environment_variables: *environment_variables
    stages: *specs_stage
  HTML-Report-Csharp:
    group: Report_Plugins
    parameters:
      pipeline: Csharp-Package
      stage: package
      job: package
      source: deploy
      language: csharp
      report_pipeline: HTML_Report
      report_plugin: html-report
      linux_env: ""
      windows_env: ""
    materials: *materials
    environment_variables: *environment_variables
    stages: *specs_stage
  HTML-Report-Dotnet:
    group: Report_Plugins
    parameters:
      pipeline: dotnet-package
      stage: artifact
      job: installer
      source: artifacts
      language: dotnet
      report_pipeline: HTML_Report
      report_plugin: html-report
      linux_env: ""
      windows_env: ""
    materials: *materials
    environment_variables: *environment_variables
    stages: *specs_stage
  HTML-Report-Ruby:
    group: Report_Plugins
    parameters:
      pipeline: Ruby-Package
      stage: package
      job: package
      source: deploy
      language: ruby
      report_pipeline: HTML_Report
      report_plugin: html-report
      linux_env: -linux.x86_64
      windows_env: -windows.x86_64
    materials: *materials
    environment_variables: *environment_variables
    stages: *specs_stage
  HTML-Report-Python:
    group: Report_Plugins
    parameters:
      pipeline: python-package
      stage: package
      job: package
      source: bin
      language: python
      report_pipeline: HTML_Report
      report_plugin: html-report
      linux_env: ""
      windows_env: ""
    materials: *materials
    environment_variables: *environment_variables
    stages: *specs_stage
  HTML-Report-JS:
    group: Report_Plugins
    parameters:
      pipeline: JS-Build
      stage: package
      job: package
      source: deploy
      language: js
      report_pipeline: HTML_Report
      report_plugin: html-report
      linux_env: ""
      windows_env: ""
    materials: *materials
    environment_variables: *environment_variables
    stages: *specs_stage
  XML-Report-Java:
    group: Report_Plugins
    parameters:
      pipeline: Java-Build
      stage: package
      job: distro
      source: deploy
      language: java
      report_pipeline: XML_Report
      report_plugin: xml-report
      linux_env: -linux.x86_64
      windows_env: -windows.x86_64
    materials: *materials
    environment_variables: *environment_variables
    stages: *specs_stage