pipelines:
  Gauge-Build:
    group: Gauge
    materials:
      gauge:
        git: https://github.com/getgauge/gauge.git
        destination: src/github.com/getgauge/gauge
        shallow_clone: true
    secure_variables:
      GITHUB_TOKEN: AES:5M8sxVr62XcjB5nQXkByQA==:2htgkabgxfyPGtwzwUmKI8Aa4V3gg/kA9hSpMw+Z+wTScfcWrHHYH9mEMQbZ21IP
    stages:
      - build:
          jobs:
            linux:
              elastic_profile_id: centos-all
              tasks:
               - exec:
                  command: /bin/bash
                  arguments:
                   - ./src/github.com/getgauge/gauge/build/run.sh
                   - test
            darwin:
              resources:
                - UT
                - darwin
              tasks:
               - exec:
                  command: /bin/sh
                  arguments:
                   - -c
                   - go version
               - exec:
                  command: /bin/sh
                  arguments:
                   - ./src/github.com/getgauge/gauge/build/run.sh
                   - test
               - exec:
                  run_if: any
                  command: touch
                  arguments:
                   - /vagrant/rollback.txt
            windows:
              elastic_profile_id: windows-all
              tasks:
               - exec:
                  command: powershell.exe
                  arguments:
                   - -ExecutionPolicy
                   - Bypass
                   - -NoLogo
                   - -NonInteractive
                   - -NoProfile
                   - -File
                   - .\src\github.com\getgauge\gauge\build\run.ps1
                   - -task
                   - test
      - package:
          jobs:
            darwin_linux:
              resources:
               - codesign
               - darwin
              secure_variables:
                CERT_PASSWORD: AES:w0p53dM+BZvru/9GxU2J2Q==:cZHB0o+pBGNREQm6ivX1kg==
                KEYCHAIN_PASSWORD: AES:WhpWbkcroEF8rqp2GyhuZg==:m3FS56+gZxzbBtQXNM4+1g==
                OS_SIGNING_IDENTITY: AES:fyyLntOF7H8v8engHWxigQ==:kv4fxZni5PQNs0PnT8ntUuA/Y6IETNBLcMCfpCydDhsuztMq9gJ79XTc3qbXt8GhBU8BkKP5a7py0YwsT/6nPw==
              tasks:
               - exec:
                  command: /bin/bash
                  arguments:
                   - -c
                   - src/github.com/getgauge/gauge/build/package.sh
              artifacts:
               - build:
                  source: src/github.com/getgauge/gauge/bin/*
                  destination: bin
               - build:
                  source: src/github.com/getgauge/gauge/deploy/*
                  destination: deploy
               - build:
                  source: src/github.com/getgauge/gauge/build/*
                  destination: build
      - deb:
          jobs:
            create_deb:
              elastic_profile_id: golang-ubuntu
              tasks:
               - exec:
                  command: /bin/bash
                  arguments:
                   - -c
                   - PATH=/usr/lib/go-1.10/bin:$PATH src/github.com/getgauge/gauge/build/mkdeb.sh
              artifacts:
               - build:
                  source: src/github.com/getgauge/gauge/deploy/*.deb
                  destination: deploy
      - rpm:
          jobs:
            create_rpm:
              elastic_profile_id: centos-all
              tasks:
               - exec:
                  command: /bin/bash
                  arguments:
                   - -c
                   - src/github.com/getgauge/gauge/build/mkrpm.sh
              artifacts:
               - build:
                  source: src/github.com/getgauge/gauge/deploy/*.rpm
                  destination: deploy
      - windows:
          clean_workspace: true
          jobs:
            sign:
              resources:
               - sign
              secure_variables:
                CERT_FILE_PWD: AES:6QvH8KFyuZu8rmmPs9YgmQ==:F8qSDGXyuJFeMFsIqed9ig==
                CERT_FILE: AES:ciq0hCGH4CCFjkQqnuhLiQ==:aJ9Ap2srncy1/VA97EDMnYHYcmBdgikjmL1vuuCfoW8lc+o5mjUzGXHE9LAQ3tc9
              tasks:
               - fetch:
                  pipeline: Gauge-Build
                  stage: package
                  job: darwin_linux
                  source: bin
                  destination: src/github.com/getgauge/gauge/
               - fetch:
                  pipeline: Gauge-Build
                  stage: package
                  job: darwin_linux
                  source: deploy
                  destination: src/github.com/getgauge/gauge/
               - exec:
                  command: powershell.exe
                  arguments:
                   - -ExecutionPolicy
                   - Bypass
                   - -NoLogo
                   - -NonInteractive
                   - -NoProfile
                   - -File
                   - .\src\github.com\getgauge\gauge\build\sign_windows_artifacts.ps1
              artifacts:
               - build:
                  source: src/github.com/getgauge/gauge/deploy/*
                  destination: deploy
               - build:
                  source: src/github.com/getgauge/gauge/test_installers/*
                  destination: test_installers
  Gauge-Deploy:
    group: Gauge
    materials:
      Gauge:
        pipeline: Gauge-Build
        stage: windows
    secure_variables:
      GITHUB_TOKEN: AES:At7ff8Eq1+fj7MCq6YSI9w==:m6WHp7Ef6WHQwvXNexkmmsIMrHmHGdZZCfF+AqcgwtotEO1GhOsVLSbtzpNrL6Us
      PASSPHRASE: AES:7Yv6yeN5X2copnD7vapDFQ==:ICXtuACHip+7aTRcEoBi+Q==
      GITHUB_EMAIL: AES:+LFTS7BtnVEFaBRMNOGOJw==:gP17lhYFS8vZRBN+BnE0rxH2onIm/XAzAPmgY9OKNAw=
      GITHUB_SSH_PRIVATE_KEY: AES:pHi8Eruj+l0XApRND76kEw==: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
    stages:
      - github-release:
          approval: manual
          jobs:
            draft:
              elastic_profile_id: centos-all
              environment_variables: 
                GOPATH: /tmp
                repoName: gauge
              tasks:
               - fetch:
                  pipeline: Gauge-Build
                  stage: windows
                  job: sign
                  source: deploy
               - exec:
                  command: /bin/sh
                  arguments:
                   - -c
                   - (echo $(ls deploy/$repoName-*-linux.x86.zip | sed "s/^deploy\/$repoName-\([^;]*\)-linux.x86.zip/\1/") >> version)
               - exec:
                  working_directory: deploy
                  command: /bin/sh
                  arguments:
                   - -c
                   - (curl -sSfL https://github.com/getgauge/gauge/raw/master/build/github_release.sh | sh)
              artifacts:
                - build:
                    source: version
      - website-update:
          jobs:
            update:
              elastic_profile_id: centos-all
              tasks:
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - eval $(ssh-agent) && echo -e "$GITHUB_SSH_PRIVATE_KEY" | ssh-add - && git clone git@github.com:getgauge/gauge.org.git
                - fetch:
                    pipeline: Gauge-Deploy
                    stage: github-release
                    job: draft
                    source: version
                    is_file: yes
                - exec:
                    working_directory: gauge.org
                    command: /bin/sh
                    arguments:
                      - -c
                      - "(version=$(cat ../version); echo -e \"gauge: $version\" > data/version.yml)"
                - exec:
                    working_directory: gauge.org
                    command: git
                    arguments:
                      - add
                      - -u
                - exec:
                    working_directory: gauge.org
                    command: /bin/sh
                    arguments:
                      - -c
                      - (git commit -m "Updating gauge version number")
                - exec:
                    working_directory: gauge.org
                    command: bundle
                    arguments:
                      - install
                - exec:
                    working_directory: gauge.org
                    command: /bin/sh
                    arguments:
                      - -c
                      - eval $(ssh-agent) && echo -e "$GITHUB_SSH_PRIVATE_KEY" | ssh-add - && git push origin master
      - docs:
          jobs:
            docs:
              elastic_profile_id: centos-all
              tasks:
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - (eval $(ssh-agent) && echo -e "$GITHUB_SSH_PRIVATE_KEY" | ssh-add - &&version=$(cat ../version); git clone git@github.com:getgauge/docs.getgauge.io.git)
                - fetch:
                    pipeline: Gauge-Deploy
                    stage: github-release
                    job: draft
                    source: version
                    is_file: yes
                - exec:
                    working_directory: docs.getgauge.io
                    command: /bin/sh
                    arguments:
                      - -c
                      - (version=$(cat ../version); git checkout -b $version)
                - exec:
                    working_directory: docs.getgauge.io
                    command: /bin/sh
                    arguments:
                      - -c
                      - (eval $(ssh-agent) && echo -e "$GITHUB_SSH_PRIVATE_KEY" | ssh-add - &&version=$(cat ../version); git push -u origin $version)
  Gauge-Deploy-Brew:
    group: Gauge
    materials:
      Gauge:
        pipeline: Gauge-Deploy
        stage: docs
    secure_variables:
      GITHUB_TOKEN: AES:At7ff8Eq1+fj7MCq6YSI9w==:m6WHp7Ef6WHQwvXNexkmmsIMrHmHGdZZCfF+AqcgwtotEO1GhOsVLSbtzpNrL6Us
      PASSPHRASE: AES:7Yv6yeN5X2copnD7vapDFQ==:ICXtuACHip+7aTRcEoBi+Q==
      GITHUB_EMAIL: AES:+LFTS7BtnVEFaBRMNOGOJw==:gP17lhYFS8vZRBN+BnE0rxH2onIm/XAzAPmgY9OKNAw=
      GITHUB_SSH_PRIVATE_KEY: AES:pHi8Eruj+l0XApRND76kEw==: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
    stages:
      - brew:
          clean_workspace: true
          jobs:
            release:
              resources:
                - darwin
                - codesign
              tasks:
                - fetch:
                    pipeline: Gauge-Deploy
                    stage: github-release
                    job: draft
                    source: version
                    is_file: yes
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - curl -O -L https://github.com/getgauge/gauge/archive/v`cat version`.tar.gz
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - shasum -a 256 v`cat version`.tar.gz | cut -d " " -f1 > sha && cat sha
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - git config --global user.name "gaugeci"
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - git config --global user.email "$GITHUB_EMAIL"
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - export BRANCH=gauge-`cat version` && cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core && git checkout . && git checkout master && (!(git show-ref --verify --quiet "refs/heads/$BRANCH") || git branch -D $BRANCH)
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - brew update
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - (brew uninstall gauge || true) && (brew install gauge || brew link --overwrite gauge)
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - eval $(ssh-agent) && echo $GITHUB_SSH_PRIVATE_KEY | ssh-add - && ssh-add -L
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - brew bump-formula-pr --url=https://github.com/getgauge/gauge/archive/v`cat version`.tar.gz --sha256=`cat sha` --message="Created by a bot. Please cc getgauge/core on issues"  gauge
  Gauge-Deploy-Choco:
    group: Gauge
    materials:
      Gauge:
        pipeline: Gauge-Deploy
        stage: docs
      chocolatey-packages:
        git: https://github.com/getgauge/chocolatey-packages
        shallow_clone: true
    secure_variables:
      GITHUB_TOKEN: AES:At7ff8Eq1+fj7MCq6YSI9w==:m6WHp7Ef6WHQwvXNexkmmsIMrHmHGdZZCfF+AqcgwtotEO1GhOsVLSbtzpNrL6Us
      PASSPHRASE: AES:7Yv6yeN5X2copnD7vapDFQ==:ICXtuACHip+7aTRcEoBi+Q==
      GITHUB_EMAIL: AES:+LFTS7BtnVEFaBRMNOGOJw==:gP17lhYFS8vZRBN+BnE0rxH2onIm/XAzAPmgY9OKNAw=
    stages:
      - choco:
          clean_workspace: true
          jobs:
            release:
              resources:
                - choco
              secure_variables:
                apiKey: AES:o8CSdm0rHgpnxFeB4CWITA==:M44DH6hQ47o7qvmIWCOwlHVcWhMizrtPd+fkqrbIwqg2xsz0/NeAXJKeCXpbXAJz
              tasks:
                - fetch:
                    pipeline: Gauge-Deploy
                    stage: github-release
                    job: draft
                    source: version
                    is_file: yes
                - exec:
                    working_directory: gauge
                    command: powershell.exe
                    arguments:
                      - gc ..\version | %{ .\package.ps1 $_ }
                - exec:
                    working_directory: gauge
                    command: powershell.exe
                    arguments:
                      - gc ..\version | %{ choco push "gauge.$_.nupkg" -k $env:apiKey }
  Gauge-Deploy-Deb:
    group: Gauge
    materials:
      Gauge:
        pipeline: Gauge-Deploy
        stage: docs
    secure_variables:
      GITHUB_TOKEN: AES:At7ff8Eq1+fj7MCq6YSI9w==:m6WHp7Ef6WHQwvXNexkmmsIMrHmHGdZZCfF+AqcgwtotEO1GhOsVLSbtzpNrL6Us
      PASSPHRASE: AES:7Yv6yeN5X2copnD7vapDFQ==:ICXtuACHip+7aTRcEoBi+Q==
      GITHUB_EMAIL: AES:+LFTS7BtnVEFaBRMNOGOJw==:gP17lhYFS8vZRBN+BnE0rxH2onIm/XAzAPmgY9OKNAw=
    stages:
      - deb_deploy:
          jobs:
            push_deb_to_bintray:
              elastic_profile_id: centos-all
              environment_variables:
                DISTRIBUTIONS: stable
                COMPONENTS: main
                REPO: gauge-deb
                PACKAGE: gauge
              secure_variables:
                API_KEY: AES:d9ZrvOzo29WEGJIdhM6f1Q==:bBdAs9Hwttz5WQDx63tg0A6y8OKG0L8BJzwC/AtVrcbISfNqEpg4i4hSZz6SNofB
                USER: AES:xmSAf3Msk8Ob3d0MJSwH+A==:4F8ALF3P/QH2yleP95b53Q==
              tasks:
                - fetch:
                    pipeline: Gauge-Build/Gauge-Deploy
                    stage: deb
                    job: create_deb
                    source: deploy
                - exec:
                    working_directory: deploy
                    command: /bin/sh
                    arguments:
                      - -c
                      - (curl -sSfL https://github.com/getgauge/gauge/raw/master/build/publish_deb_to_bintray.sh | sh)
  Gauge-Deploy-RPM:
    group: Gauge
    materials:
      Gauge:
        pipeline: Gauge-Deploy
        stage: docs
    secure_variables:
      GITHUB_TOKEN: AES:At7ff8Eq1+fj7MCq6YSI9w==:m6WHp7Ef6WHQwvXNexkmmsIMrHmHGdZZCfF+AqcgwtotEO1GhOsVLSbtzpNrL6Us
      PASSPHRASE: AES:7Yv6yeN5X2copnD7vapDFQ==:ICXtuACHip+7aTRcEoBi+Q==
      GITHUB_EMAIL: AES:+LFTS7BtnVEFaBRMNOGOJw==:gP17lhYFS8vZRBN+BnE0rxH2onIm/XAzAPmgY9OKNAw=
    stages:
      - rpm_deploy:
          jobs:
            publish_rpm_to_bintray:
              elastic_profile_id: centos-all
              environment_variables:
                BINTRAY_PACKAGE: gauge-stable
              secure_variables:
                API_KEY: AES:XoXA67iuddT3LvUCNqXihQ==:TKqNhKHrH+ryEKwWwVHJtvIcL540BPx23JgYd0QWOaMfn51dogCgHHFR66DesAyQ
                USER: AES:qg02Ljr0wN6SQaf21wnrfg==:+SKgEbD6IcmSV5pjPr+YQg==
              tasks:
                - fetch:
                    pipeline: Gauge-Build/Gauge-Deploy
                    stage: rpm
                    job: create_rpm
                    source: deploy
                - exec:
                    working_directory: deploy
                    command: /bin/sh
                    arguments:
                      - -c
                      - (curl -sSfL https://github.com/getgauge/gauge/raw/master/build/publish_rpm_to_bintray.sh | sh)
  Gauge-Deploy-NPM:
    group: Gauge
    materials:
      Gauge:
        pipeline: Gauge-Deploy
        stage: docs
    secure_variables:
      GITHUB_TOKEN: AES:At7ff8Eq1+fj7MCq6YSI9w==:m6WHp7Ef6WHQwvXNexkmmsIMrHmHGdZZCfF+AqcgwtotEO1GhOsVLSbtzpNrL6Us
      PASSPHRASE: AES:7Yv6yeN5X2copnD7vapDFQ==:ICXtuACHip+7aTRcEoBi+Q==
      GITHUB_EMAIL: AES:+LFTS7BtnVEFaBRMNOGOJw==:gP17lhYFS8vZRBN+BnE0rxH2onIm/XAzAPmgY9OKNAw=
    stages:
      - npm_deploy:
          jobs:
            publish_npm:
              elastic_profile_id: centos-all
              secure_variables:
                NPM_TOKEN: efUvjzmZzPgw+zldFDyT8faQLZbL4k22+a4wkQe67TUZp9pXU4XCAA==
              tasks:
                - fetch:
                    pipeline: Gauge-Build/Gauge-Deploy
                    stage: package
                    job: darwin_linux
                    source: build
                - fetch:
                    pipeline: Gauge-Deploy
                    stage: github-release
                    job: draft
                    source: version
                    is_file: yes
                - exec:
                    working_directory: build/npm
                    command: /bin/sh
                    arguments:
                      - -c
                      - npm version `cat ../../version`
                - exec:
                    working_directory: build/npm
                    command: /bin/sh
                    arguments:
                      - -c
                      - "echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>~/.npmrc && npm publish --access=public"
  Gauge-Deploy-PyPi:
    group: Gauge
    materials:
      Gauge:
        pipeline: Gauge-Deploy
        stage: docs
    secure_variables:
      PYPI_USER: +A8MwngWBLI=
      PYPI_PASSWORD: Yxi7Rn1SMoD82r6ME7LaiKVwkAZcS0+j
    stages:
      - pypi_deploy:
          clean_workspace: true
          jobs:
            package:
              elastic_profile_id: centos-all
              tasks:
                - fetch:
                    pipeline: Gauge-Deploy
                    stage: github-release
                    job: draft
                    source: version
                    is_file: yes
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - git clone https://github.com/getgauge/gauge.git
                - exec:
                    command: pip
                    arguments:
                      - install
                      - requests
                      - --user
                - exec:
                    working_directory: gauge/build/pip
                    command: /bin/sh
                    arguments:
                      - -c
                      - GAUGE_PACKAGE_NAME=getgauge-cli GAUGE_VERSION=$(cat ../../../version) python3 build.py --dist
                - exec:
                    command: pip
                    arguments:
                      - install
                      - twine
                      - --user
                - exec:
                    working_directory: gauge/build/pip
                    command: /bin/sh
                    arguments:
                      - -c
                      - (file=$(ls dist/*gauge-cli-*.tar.gz); python3 -m twine upload -u $PYPI_USER -p $PYPI_PASSWORD $file)