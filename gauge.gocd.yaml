pipelines:
  Gauge-Build:
    group: Gauge
    materials:
      gauge:
        git: https://github.com/getgauge/gauge.git
        shallow_clone: true
    secure_variables:
      GITHUB_TOKEN: AES:5M8sxVr62XcjB5nQXkByQA==:2htgkabgxfyPGtwzwUmKI8Aa4V3gg/kA9hSpMw+Z+wTScfcWrHHYH9mEMQbZ21IP
    stages:
      - build:
          jobs:
            linux:
              elastic_profile_id: centos-all
              tasks:
               - exec:
                  command: /bin/bash
                  arguments:
                   - ./build/run.sh
                   - test
            windows:
              elastic_profile_id: windows-all
              tasks:
               - exec:
                  command: powershell.exe
                  arguments:
                   - -ExecutionPolicy
                   - Bypass
                   - -NoLogo
                   - -NonInteractive
                   - -NoProfile
                   - -File
                   - .\build\run.ps1
                   - -task
                   - test
      - package:
          jobs:
            darwin_linux:
              resources:
               - codesign
               - darwin
              secure_variables:
                CERT_PASSWORD: AES:w0p53dM+BZvru/9GxU2J2Q==:cZHB0o+pBGNREQm6ivX1kg==
                KEYCHAIN_PASSWORD: AES:WhpWbkcroEF8rqp2GyhuZg==:m3FS56+gZxzbBtQXNM4+1g==
                OS_SIGNING_IDENTITY: AES:fyyLntOF7H8v8engHWxigQ==:kv4fxZni5PQNs0PnT8ntUuA/Y6IETNBLcMCfpCydDhsuztMq9gJ79XTc3qbXt8GhBU8BkKP5a7py0YwsT/6nPw==
              tasks:
               - exec:
                  command: /bin/bash
                  arguments:
                   - -c
                   - build/package.sh
               - exec:
                  command: /bin/bash
                  arguments:
                    - -c
                    - (git log -n 1 | grep -e "commit \w*" | awk '{print $2}' > build-revision)
              artifacts:
               - build:
                  source: bin/*
                  destination: bin
               - build:
                  source: deploy/*
                  destination: deploy
               - build:
                  source: build/*
                  destination: build
               - build:
                  source: build-revision
      - deb:
          jobs:
            create_deb:
              elastic_profile_id: golang-ubuntu
              tasks:
               - exec:
                  command: /bin/bash
                  arguments:
                   - -c
                   - PATH=/usr/lib/go-1.10/bin:$PATH build/mkdeb.sh
              artifacts:
               - build:
                  source: deploy/*.deb
                  destination: deploy
      - rpm:
          jobs:
            create_rpm:
              elastic_profile_id: centos-all
              tasks:
               - exec:
                  command: /bin/bash
                  arguments:
                   - -c
                   - build/mkrpm.sh
              artifacts:
               - build:
                  source: deploy/*.rpm
                  destination: deploy
      - windows:
          clean_workspace: true
          jobs:
            sign:
              resources:
               - sign
              secure_variables:
                CERT_FILE: AES:EgNhsVGGzZ9LSeSKJRR3mA==:5qJbmjp62Jk8aMIwiXg0BpbpemG6BtxcTOxHM+prOBRZrBc+0xsKj/BgYKoeGWXF
              tasks:
               - fetch:
                  pipeline: Gauge-Build
                  stage: package
                  job: darwin_linux
                  source: bin
               - fetch:
                  pipeline: Gauge-Build
                  stage: package
                  job: darwin_linux
                  source: deploy
               - exec:
                  command: powershell.exe
                  arguments:
                   - -ExecutionPolicy
                   - Bypass
                   - -NoLogo
                   - -NonInteractive
                   - -NoProfile
                   - -File
                   - .\build\sign_windows_artifacts.ps1
              artifacts:
               - build:
                  source: deploy/*
                  destination: deploy
               - build:
                  source: test_installers/*
                  destination: test_installers
  Gauge-Deploy:
    group: Gauge
    materials:
      Gauge:
        pipeline: Gauge-Build
        stage: windows
    secure_variables:
      GITHUB_TOKEN: AES:At7ff8Eq1+fj7MCq6YSI9w==:m6WHp7Ef6WHQwvXNexkmmsIMrHmHGdZZCfF+AqcgwtotEO1GhOsVLSbtzpNrL6Us
      PASSPHRASE: AES:7Yv6yeN5X2copnD7vapDFQ==:ICXtuACHip+7aTRcEoBi+Q==
      GITHUB_EMAIL: AES:+LFTS7BtnVEFaBRMNOGOJw==:gP17lhYFS8vZRBN+BnE0rxH2onIm/XAzAPmgY9OKNAw=
      GITHUB_SSH_PRIVATE_KEY: AES:WufQ+0lOQDuPb9Zf65Liqg==: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
    stages:
      - github-release:
          approval: manual
          jobs:
            draft:
              elastic_profile_id: centos-all
              environment_variables:
                GOPATH: /tmp
                repoName: gauge
              tasks:
               - fetch:
                  pipeline: Gauge-Build
                  stage: windows
                  job: sign
                  source: deploy
               - exec:
                  command: /bin/sh
                  arguments:
                   - -c
                   - (echo $(ls deploy/$repoName-*-linux.x86.zip | sed "s/^deploy\/$repoName-\([^;]*\)-linux.x86.zip/\1/") >> version)
               - exec:
                  working_directory: deploy
                  command: /bin/sh
                  arguments:
                   - -c
                   - (curl -sSfL https://github.com/getgauge/gauge/raw/master/build/github_release.sh | sh)
              artifacts:
                - build:
                    source: version
      - github-publish:
          approval: manual
          jobs:
            publish:
              elastic_profile_id: centos-all
              environment_variables:
                GOPATH: /tmp
                repoName: gauge
                releaseType: publish
              tasks:
               - fetch:
                  pipeline: Gauge-Build
                  stage: windows
                  job: sign
                  source: deploy
               - exec:
                  working_directory: deploy
                  command: /bin/sh
                  arguments:
                   - -c
                   - (curl -sSfL https://github.com/getgauge/gauge/raw/master/build/github_release.sh | sh)
      - website-update:
          jobs:
            update:
              elastic_profile_id: centos-all
              tasks:
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - eval $(ssh-agent) && echo -e "$GITHUB_SSH_PRIVATE_KEY" | ssh-add - && git clone git@github.com:getgauge/gauge.org.git
                - fetch:
                    pipeline: Gauge-Deploy
                    stage: github-release
                    job: draft
                    source: version
                    is_file: yes
                - exec:
                    working_directory: gauge.org
                    command: /bin/sh
                    arguments:
                      - -c
                      - "(version=$(cat ../version); echo -e \"gauge: $version\" > data/version.yml)"
                - exec:
                    working_directory: gauge.org
                    command: git
                    arguments:
                      - add
                      - -u
                - exec:
                    working_directory: gauge.org
                    command: /bin/sh
                    arguments:
                      - -c
                      - (git commit -m "Updating gauge version number")
                - exec:
                    working_directory: gauge.org
                    command: /bin/sh
                    arguments:
                      - -c
                      - eval $(ssh-agent) && echo -e "$GITHUB_SSH_PRIVATE_KEY" | ssh-add - && git push origin master
      - docs:
          jobs:
            docs:
              elastic_profile_id: centos-all
              tasks:
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - (eval $(ssh-agent) && echo -e "$GITHUB_SSH_PRIVATE_KEY" | ssh-add - && git clone git@github.com:getgauge/docs.gauge.org.git)
                - fetch:
                    pipeline: Gauge-Deploy
                    stage: github-release
                    job: draft
                    source: version
                    is_file: yes
                - exec:
                    working_directory: docs.gauge.org
                    command: /bin/sh
                    arguments:
                      - -c
                      - "(version=$(cat ../version); echo -e \"gauge: $version\" > data/gauge_version.txt)"
                - exec:
                    working_directory: docs.gauge.org
                    command: git
                    arguments:
                      - add
                      - -u
                - exec:
                    working_directory: docs.gauge.org
                    command: /bin/sh
                    arguments:
                      - -c
                      - (git commit -m "Updating gauge version number")
                - exec:
                    working_directory: docs.gauge.org
                    command: /bin/sh
                    arguments:
                      - -c
                      - eval $(ssh-agent) && echo -e "$GITHUB_SSH_PRIVATE_KEY" | ssh-add - && git push origin master
  Gauge-Deploy-Brew:
    group: Gauge
    materials:
      Gauge:
        pipeline: Gauge-Deploy
        stage: docs
    secure_variables:
      GITHUB_TOKEN: AES:At7ff8Eq1+fj7MCq6YSI9w==:m6WHp7Ef6WHQwvXNexkmmsIMrHmHGdZZCfF+AqcgwtotEO1GhOsVLSbtzpNrL6Us
      PASSPHRASE: AES:7Yv6yeN5X2copnD7vapDFQ==:ICXtuACHip+7aTRcEoBi+Q==
      GITHUB_EMAIL: AES:+LFTS7BtnVEFaBRMNOGOJw==:gP17lhYFS8vZRBN+BnE0rxH2onIm/XAzAPmgY9OKNAw=
      HOMEBREW_GITHUB_API_TOKEN: AES:cpeeqxQJ2LnNUmATfFBi2w==:4SBbrlchzAuYir1QWwD2NhWvOEcvp4a8ix3vysX4/SSo5SdtOqoAVj7jv0q41XLI
    stages:
      - brew:
          clean_workspace: true
          jobs:
            release:
              resources:
                - darwin
                - codesign
              tasks:
                - fetch:
                    pipeline: Gauge-Deploy
                    stage: github-release
                    job: draft
                    source: version
                    is_file: yes
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - curl -O -L https://github.com/getgauge/gauge/archive/v`cat version`.tar.gz
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - shasum -a 256 v`cat version`.tar.gz | cut -d " " -f1 > sha && cat sha
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - git config --global user.name "gaugeci"
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - git config --global user.email "$GITHUB_EMAIL"
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - export BRANCH=gauge-`cat version` && cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core && git checkout . && git checkout master && (!(git show-ref --verify --quiet "refs/heads/$BRANCH") || git branch -D $BRANCH)
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - brew update
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - (brew uninstall gauge || true) && (brew install gauge || brew link --overwrite gauge)
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - brew bump-formula-pr --force --url=https://github.com/getgauge/gauge/archive/v`cat version`.tar.gz --sha256=`cat sha` --message="Created by a bot. Please cc getgauge/core on issues"  gauge
  Gauge-Deploy-Choco:
    group: Gauge
    materials:
      Gauge:
        pipeline: Gauge-Deploy
        stage: docs
      chocolatey-packages:
        git: https://github.com/getgauge/chocolatey-packages
        shallow_clone: true
    secure_variables:
      GITHUB_TOKEN: AES:At7ff8Eq1+fj7MCq6YSI9w==:m6WHp7Ef6WHQwvXNexkmmsIMrHmHGdZZCfF+AqcgwtotEO1GhOsVLSbtzpNrL6Us
      PASSPHRASE: AES:7Yv6yeN5X2copnD7vapDFQ==:ICXtuACHip+7aTRcEoBi+Q==
      GITHUB_EMAIL: AES:+LFTS7BtnVEFaBRMNOGOJw==:gP17lhYFS8vZRBN+BnE0rxH2onIm/XAzAPmgY9OKNAw=
    stages:
      - choco:
          clean_workspace: true
          jobs:
            release:
              resources:
                - choco
              secure_variables:
                apiKey: AES:o8CSdm0rHgpnxFeB4CWITA==:M44DH6hQ47o7qvmIWCOwlHVcWhMizrtPd+fkqrbIwqg2xsz0/NeAXJKeCXpbXAJz
              tasks:
                - fetch:
                    pipeline: Gauge-Deploy
                    stage: github-release
                    job: draft
                    source: version
                    is_file: yes
                - exec:
                    working_directory: gauge
                    command: powershell.exe
                    arguments:
                      - gc ..\version | %{ .\package.ps1 $_ }
                - exec:
                    working_directory: gauge
                    command: powershell.exe
                    arguments:
                      - gc ..\version | %{ choco push "gauge.$_.nupkg" -k $env:apiKey }
  Gauge-Deploy-Deb:
    group: Gauge
    materials:
      Gauge:
        pipeline: Gauge-Deploy
        stage: docs
    secure_variables:
      GITHUB_TOKEN: AES:At7ff8Eq1+fj7MCq6YSI9w==:m6WHp7Ef6WHQwvXNexkmmsIMrHmHGdZZCfF+AqcgwtotEO1GhOsVLSbtzpNrL6Us
      PASSPHRASE: AES:7Yv6yeN5X2copnD7vapDFQ==:ICXtuACHip+7aTRcEoBi+Q==
      GITHUB_EMAIL: AES:+LFTS7BtnVEFaBRMNOGOJw==:gP17lhYFS8vZRBN+BnE0rxH2onIm/XAzAPmgY9OKNAw=
    stages:
      - deb_deploy:
          jobs:
            push_deb_to_bintray:
              elastic_profile_id: centos-all
              environment_variables:
                DISTRIBUTIONS: stable
                COMPONENTS: main
                REPO: gauge-deb
                PACKAGE: gauge
              secure_variables:
                API_KEY: AES:d9ZrvOzo29WEGJIdhM6f1Q==:bBdAs9Hwttz5WQDx63tg0A6y8OKG0L8BJzwC/AtVrcbISfNqEpg4i4hSZz6SNofB
                USER: AES:xmSAf3Msk8Ob3d0MJSwH+A==:4F8ALF3P/QH2yleP95b53Q==
              tasks:
                - fetch:
                    pipeline: Gauge-Build/Gauge-Deploy
                    stage: deb
                    job: create_deb
                    source: deploy
                - exec:
                    working_directory: deploy
                    command: /bin/sh
                    arguments:
                      - -c
                      - (curl -sSfL https://github.com/getgauge/gauge/raw/master/build/publish_deb_to_bintray.sh | sh)
  Gauge-Deploy-RPM:
    group: Gauge
    materials:
      Gauge:
        pipeline: Gauge-Deploy
        stage: docs
    secure_variables:
      GITHUB_TOKEN: AES:At7ff8Eq1+fj7MCq6YSI9w==:m6WHp7Ef6WHQwvXNexkmmsIMrHmHGdZZCfF+AqcgwtotEO1GhOsVLSbtzpNrL6Us
      PASSPHRASE: AES:7Yv6yeN5X2copnD7vapDFQ==:ICXtuACHip+7aTRcEoBi+Q==
      GITHUB_EMAIL: AES:+LFTS7BtnVEFaBRMNOGOJw==:gP17lhYFS8vZRBN+BnE0rxH2onIm/XAzAPmgY9OKNAw=
    stages:
      - rpm_deploy:
          jobs:
            publish_rpm_to_bintray:
              elastic_profile_id: centos-all
              environment_variables:
                BINTRAY_PACKAGE: gauge-stable
              secure_variables:
                API_KEY: AES:XoXA67iuddT3LvUCNqXihQ==:TKqNhKHrH+ryEKwWwVHJtvIcL540BPx23JgYd0QWOaMfn51dogCgHHFR66DesAyQ
                USER: AES:qg02Ljr0wN6SQaf21wnrfg==:+SKgEbD6IcmSV5pjPr+YQg==
              tasks:
                - fetch:
                    pipeline: Gauge-Build/Gauge-Deploy
                    stage: rpm
                    job: create_rpm
                    source: deploy
                - exec:
                    working_directory: deploy
                    command: /bin/sh
                    arguments:
                      - -c
                      - (curl -sSfL https://github.com/getgauge/gauge/raw/master/build/publish_rpm_to_bintray.sh | sh)
  Gauge-Deploy-NPM:
    group: Gauge
    materials:
      Gauge:
        pipeline: Gauge-Deploy
        stage: docs
    secure_variables:
      GITHUB_TOKEN: AES:At7ff8Eq1+fj7MCq6YSI9w==:m6WHp7Ef6WHQwvXNexkmmsIMrHmHGdZZCfF+AqcgwtotEO1GhOsVLSbtzpNrL6Us
      PASSPHRASE: AES:7Yv6yeN5X2copnD7vapDFQ==:ICXtuACHip+7aTRcEoBi+Q==
      GITHUB_EMAIL: AES:+LFTS7BtnVEFaBRMNOGOJw==:gP17lhYFS8vZRBN+BnE0rxH2onIm/XAzAPmgY9OKNAw=
    stages:
      - npm_deploy:
          jobs:
            publish_npm:
              elastic_profile_id: centos-all
              secure_variables:
                NPM_TOKEN: AES:smCSdWEkiHlJgx9yY+uCQQ==:oJgEJ1fMOzrQ7Ot62KcOj8dqPFKApy8X2E19uy793RzIl1NEi3JTTbHGn2CyH6ew
              tasks:
                - fetch:
                    pipeline: Gauge-Build/Gauge-Deploy
                    stage: package
                    job: darwin_linux
                    source: build
                - fetch:
                    pipeline: Gauge-Deploy
                    stage: github-release
                    job: draft
                    source: version
                    is_file: yes
                - exec:
                    working_directory: build/npm
                    command: /bin/sh
                    arguments:
                      - -c
                      - npm version `cat ../../version`
                - exec:
                    working_directory: build/npm
                    command: /bin/sh
                    arguments:
                      - -c
                      - "echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>~/.npmrc && npm publish --access=public"
  Gauge-Deploy-PyPi:
    group: Gauge
    materials:
      Gauge:
        pipeline: Gauge-Deploy
        stage: docs
    secure_variables:
      PYPI_USER: AES:LARhFRJy0ctn3K3OUae0OQ==:VO+QaZe34UTgs7gaQatN1w==
      PYPI_PASSWORD: AES:ZEf+/roxrD0DR6pA42VI6Q==:8T8oQb3xcNN+yBQiwgbxWIMEJ6EsU33VoE0s9S2IDWE=
    stages:
      - pypi_deploy:
          clean_workspace: true
          jobs:
            package:
              elastic_profile_id: centos-all
              tasks:
                - fetch:
                    pipeline: Gauge-Deploy
                    stage: github-release
                    job: draft
                    source: version
                    is_file: yes
                - fetch:
                    pipeline: Gauge-Build/Gauge-Deploy
                    stage: package
                    job: darwin_linux
                    source: build-revision
                    is_file: yes
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - git clone https://github.com/getgauge/gauge.git
                - exec:
                    working_directory: gauge
                    command: /bin/sh
                    arguments:
                      - -c
                      - (git checkout $(cat build-revision))
                - exec:
                    command: pip
                    arguments:
                      - install
                      - requests
                      - --user
                - exec:
                    working_directory: gauge/build/pip
                    command: /bin/sh
                    arguments:
                      - -c
                      - GAUGE_PACKAGE_NAME=getgauge-cli GAUGE_VERSION=$(cat ../../../version) python3 build.py --dist
                - exec:
                    command: pip
                    arguments:
                      - install
                      - twine
                      - --user
                - exec:
                    working_directory: gauge/build/pip
                    command: /bin/sh
                    arguments:
                      - -c
                      - (file=$(ls dist/*gauge-cli-*.tar.gz); python3 -m twine upload -u $PYPI_USER -p $PYPI_PASSWORD $file)