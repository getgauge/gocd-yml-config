pipelines:
  Java-Build:
    group: Gauge-Java
    materials:
      java:
        git: https://github.com/getgauge/gauge-java.git
    secure_variables:
      GITHUB_TOKEN: AES:IbbG426Rwxu7cYruH+E0DQ==:Uzc18Gf7R3fNx0dvDq0ckCz0Osfeb+z5MhoYvg8yIws9Kpxjp/x37DDpXd+75Nsx
    stages:
      - build:elastic_profile_id: centos-all
          jobs:
            compile_and_unit_test:
              elastic_profile_id: centos-all
              tasks:
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - go run make.go --all-platforms
              artifacts:
                - build:
                    source: "*"
                    destination: gauge-java
      - sign:
          clean_workspace: true
          jobs:
            sign-exe:
              resources:
                - sign
                - windows
              secure_variables:
                CERT_FILE_PATH: AES:EgNhsVGGzZ9LSeSKJRR3mA==:5qJbmjp62Jk8aMIwiXg0BpbpemG6BtxcTOxHM+prOBRZrBc+0xsKj/BgYKoeGWXF
              tasks:
                - exec:
                    working_directory: gauge-java
                    command: ls
                - fetch:
                    pipeline: Java-Build
                    stage: build
                    job: compile_and_unit_test
                    source: gauge-java
                - exec:
                    working_directory: gauge-java/libs
                    command: ls
                - exec:
                    working_directory: gauge-java
                    command: powershell.exe
                    arguments:
                      - /c
                      - signtool sign /debug /v /tr http://timestamp.digicert.com /a /fd sha256 /td sha256 /f $env:CERT_FILE_PATH /as bin\windows_386\gauge-java.exe
                - exec:
                    working_directory: gauge-java
                    command: powershell.exe
                    arguments:
                      - /c
                      - signtool sign /debug /v /tr http://timestamp.digicert.com /a /fd sha256 /td sha256 /f $env:CERT_FILE_PATH /as bin\windows_amd64\gauge-java.exe
              artifacts:
                - build:
                    source: gauge-java/*
                    destination: gauge-java
      - package:
          jobs:
            distro:
              elastic_profile_id: centos-all
              tasks:
                - fetch:
                    pipeline: Java-Build
                    stage: sign
                    job: sign-exe
                    source: gauge-java
                - exec:
                    working_directory: gauge-java
                    command: /bin/sh
                    arguments:
                      - -c
                      - (chmod +x bin/*/*)
                - exec:
                    working_directory: gauge-java
                    command: go
                    arguments:
                      - run
                      - make.go
                      - --distro
                      - --all-platforms
              artifacts:
                - build:
                    source: gauge-java/deploy/*
                    destination: deploy
  Java-FT:
    group: Gauge-Java
    materials:
      gauge-tests:
        git: https://github.com/getgauge/gauge-tests.git
        destination: gauge-tests
      package:
        pipeline: Java-Build
        stage: package
      gauge:
        pipeline: Gauge-Build
        stage: windows
      html-report:
        pipeline: HTML_Report
        stage: package
      xml-report:
        pipeline: XML_Report
        stage: package
    environment_variables:
      enable_multithreading: true
      language: java
    stages:
      - specs:
          clean_workspace: true
          jobs:
            linux:
              environment_variables:
                GOPATH: /tmp
                GOBIN: /tmp/bin
                GAUGE_ROOT: /tmp
                GAUGE_PREFIX: /tmp
              elastic_profile_id: centos-all
              tasks:
                - fetch:
                    pipeline: Gauge-Build
                    stage: windows
                    job: sign
                    source: test_installers/gauge-linux.x86_64.zip
                    is_file: yes
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - mkdir -p $GAUGE_ROOT/bin && unzip -o gauge-linux.x86_64.zip -d $GAUGE_ROOT/bin
                - fetch:
                    pipeline:  Java-Build
                    stage: package
                    job: distro
                    source: deploy
                - exec:
                    working_directory: deploy
                    command: /bin/sh
                    arguments:
                      - -c
                      - (version=$(ls gauge-java-*-linux.x86_64.zip | sed "s/^gauge-java-\([^;]*\)-linux.x86_64.zip/\1/"); $GAUGE_PREFIX/bin/gauge install java -f gauge-java-$version-linux.x86_64.zip)
                - fetch:
                    pipeline: XML_Report
                    stage: package
                    job: package
                    source: deploy
                - exec:
                    working_directory: deploy
                    command: /bin/sh
                    arguments:
                      - -c
                      - (version=$(ls xml-report-*-linux.x86_64.zip | sed "s/^xml-report-\([^;]*\)-linux.x86_64.zip/\1/"); $GAUGE_PREFIX/bin/gauge install xml-report -f xml-report-$version-linux.x86_64.zip)
                - fetch:
                    pipeline: HTML_Report
                    stage: package
                    job: package
                    source: deploy
                - exec:
                    working_directory: deploy
                    command: /bin/sh
                    arguments:
                      - -c
                      - (version=$(ls html-report-*-linux.x86_64.zip | sed "s/^html-report-\([^;]*\)-linux.x86_64.zip/\1/"); $GAUGE_PREFIX/bin/gauge install html-report -f html-report-$version-linux.x86_64.zip)
                - exec:
                    working_directory: gauge-tests
                    command: /bin/sh
                    arguments:
                      - -c
                      - PATH=/tmp/bin:$PATH mvn -q clean install -Denv=ci-java -Dtags="java" -DinParallel=true -Dnodes=2
              artifacts:
                - build:
                    source: gauge-tests/reports-java/html-report/*
                    destination: html-report
                - build:
                    source: gauge-tests/reports-java/xml-report/*
                    destination: xml-report
                - build:
                    source: gauge-tests/testLogs
                    destination: test-logs
            windows:
              environment_variables:
                GOPATH: C:/gauge/
                GOBIN: C:/gauge/bin
                GAUGE_ROOT: C:/gauge_root
                GAUGE_HOME: C:/gauge-plugins
              elastic_profile_id: windows-all
              tasks:
                - fetch:
                    pipeline: Gauge-Build
                    stage: windows
                    job: sign
                    source: test_installers/gauge-windows.x86_64.zip
                    is_file: yes
                - exec:
                    command: cmd
                    arguments:
                      - /c
                      - "unzip -o gauge-windows.x86_64.zip -d %GAUGE_ROOT%"
                - fetch:
                    pipeline: Java-Build
                    stage: package
                    job: distro
                    source: deploy
                - exec:
                    working_directory: deploy
                    command: cmd
                    arguments:
                      -  /c
                      - "for %f in (gauge-java-*-windows.x86_64.zip) do %GAUGE_ROOT%/gauge install java -f %f"
                - fetch:
                    pipeline: HTML_Report
                    stage: package
                    job: package
                    source: deploy
                - exec:
                    working_directory: deploy
                    command: cmd
                    arguments:
                      - /c
                      - "for %f in (html-report-*-windows.x86_64.zip) do %GAUGE_ROOT%/gauge install html-report -f %f"
                - fetch:
                    pipeline: XML_Report
                    stage: package
                    job: package
                    source: deploy
                - exec:
                    command: cmd
                    arguments:
                      - /c
                      - "for %f in (xml-report-*-windows.x86_64.zip) do %GAUGE_ROOT%/gauge install xml-report -f %f"
                - exec:
                    working_directory: gauge-tests
                    command: cmd
                    arguments:
                      - /c
                      - path %GAUGE_ROOT%;%PATH% & gauge version & mvn clean install -q -Denv=ci-java -Dtags="java" -DinParallel=true -Dnodes=2
              artifacts:
                - build:
                    source: gauge-tests/reports-java/html-report/*
                    destination: html-report
                - build:
                    source: gauge-tests/reports-java/xml-report/*
                    destination: xml-report
                - build:
                    source: gauge-tests/testLogs
                    destination: test-logs
  Java-Deploy:
    group: Gauge-Java
    materials:
      Java-Package:
        pipeline: Java-Build
        stage: package
    environment_variables:
      GOPATH: /tmp
    secure_variables:
      GITHUB_TOKEN: AES:bI2YOl21056SfErCsMNAAw==:yB9Cacb8aOx4+g1gLO1qDLFomeMaoZzT6UEi7hK460Ynf/fKirmEn+QMltDsWqB7
      username: AES:VOC7MIlHxgMYXpv/9H6kCg==:UXG2r0NTvfAdgAHwZu+Xfw==
      password: AES:74P92aYQsuotGroK/uSfPQ==:UJgVH9rwuOKLhq1hmg/PzQ==
    stages:
      - release:
          approval: manual
          clean_workspace: true
          jobs:
            github:
              elastic_profile_id: centos-all
              environment_variables:
                repoName: gauge-java
              secure_variables:
                GITHUB_SSH_PRIVATE_KEY: AES:WufQ+0lOQDuPb9Zf65Liqg==:srnE2wCb6scFsQf9+zWnF6KT8PerOqGY+dUx3BVG6UDsOYIIRcgpiPgEVsnX+LtEccB6aTYzwhbcBijikG3wnf+anWOk5163DvME8GKJxua53AuwTN82LVsyKY2mDL9Of3DK7Fvusbcy/1Sgep4m5j25xDPybCcCFoEB5p5sJbY5gVrsK8cuzMe+U0k9+8HUui5KobzxxzWld4Wf3/GeSodDQtVyxxyeA8YjC05UAVOgitrmcBlMgDX+U24MBxIgEG61gUCE0Sz3nvnURgYDCMJXQKLM9bhOeWGdiht3eI561lBE0o9K4PinUXwJKTToifFYpEbnzsrnhsuLIvHZL/OmP0dJJck8T2b8CrK4v5SOOprTHeQBrpyvZWDVbpJ9ID2Mz1wEROCbX7l8RYYnNtQIkUtuQlqBbH7FnesrMdPsEnHDHg70eWoza8sDZWWBwaW71WwkGD5+83h/nvcwiabu64EnT9xjNs2vYFB1vCqLWbfOngAUZknSd3vvIMbEXOi40ZXoMrXEnQG2ye+w3xY7sljmaFwD2+vd0x3ybM/i0zdjlINkUsu3v3q/7hxdvOAKDD4y6nUfHrvJe5HCvyAFGR0uYtzKC3J+sT67rL/i/DH2sJhcBwIE/FDfgBnN5mfrW22j+bQ+f8e+fWdRAwvtOWmhL1U4kJxtSxZL7kucbXAvGZSC9puPq2sYBS6rj00MWMBVcHyKhJNN1Ev3J+x3Fohk6zbjHeUaeQ1BU3FuCGb2bm+UvT4bj78Q3gm1EaOx90ZQ9yaTrMO+neiY/AVLFkSOXG0DSUrZDBFd7z9BdQ4WgNQjaa3ZCtlHvnpEy+c8dRiPjwCyc0f6iruIajqBRlKfh9Fd/zNvuAoA/VGS4ZqIhKSmR4ixaHpMAbfslhQ6K6Exn5fmDIxmipSSqmDIDt0lwzSGmqce25Ow8A7nn6goPg5wlHHrZfVa01jrSAvVGGzWPdoXsHh4foJzV64or/PLMOdSajRVU5nI45wgHbgrI9UmRMVXC+FtePywr6Agl1kr/x/0oxnwEACZBk+x3v80YTVQkyjhGxPW1s/BnfoVnibWvfhDeUNE48c1kObyRN/qXUqBBVJKIm1/ZQ9o8TK84TuaLWvlF9Nfp5CmQaLdNDGPiqzpTkVpa6HFOtRqy6oS4JszvsVunVb0f34ulA4Q2CCkxb8Zt4SHuZg3wqClsHdZqumOXJYZkqS/voYuiXpRJyUI/NNbo2o6cM3VPCy4wJFG592JACG9sNRzsRo2TeUQk/gev+fHNcbqP4rH+d1xjbsrqrgQkdGPmLAWWTa5tc7mtjdpC2KLFSM/Y1K3rrpXzhO2M+070sIEdQAoRmiZFRxuXELBllm9rfewp3a4Hdazl1GLuE1zzsPqGZDqL3e554c/PkakoPKO/V8ZX1FnVgRWTC+panHuaFLL1pHt2ObRhuwHbycmVS3tfRJ7xSHlOZV9O3YtjrOdRXL0pIagcMY9u9Lw3LqHLrIOn4EDTXFNZT+1pndDQwF6fpq7aO9Z2WHMZtp9DgerVp3Zz7OrkqJHiYRk5wt5zgHnIpd3dTuNYLfsb3YfnanZ/4kg+5bZKY/GbSC5Iz5Yt7D4e4aD9sUrGITNoYpHcwLM0SVkJdvGfLKvN1lEHPcr3PPbfR8rxxjy5mIUIJJmXJDjHph72U8NkLM1ujglkg2dXzcGdHqvTtHHFAhel38dab4trQjZ/ENPwiRq5t44C+7a4NR8ngN3VbXtYbq09SfSdp08XbKNdXapIUjM39okzlryd2tnjD6EhibfoyOJg7SKmr3F/cMNs8UBRJ4Uxr3W94TFvSsXDb1LJ+dYcniV2OUyhFWTqKR376QF/2aZPbj7EXwKJPJ6xZQjWTssLOT4zwxtteolxYxlJqYSZiw7jrfANo26+v7cCYSZ2USAEMFpgtB6jzlZFshZysGOnQD4mh9SCd7iyMjMa39zid2H6QuyLBQB8bpiwOba90xONJClR6RDuEMvZ1tmP7sYN4ZttRa+M4kYYfZfuuQXaI5HXMKJFQk/uK6h3x7jELuul7gwCjtMg2YS1GmL+6iaMl0UVDHUblNBTMHKwtQuv+5n6BpwX2BwoBeJOaEF9HWlaqlxtM6GNNqajrZ77cp1vShQYt5XYJVmVDV3gU5bRduos3UwHLfxBP3Oruts9P/Wg1utfQIS6t+s+agSbOyn795m37lNdOI+zxLCFGNnzZYX3zKQYMO4lqkJ9tyxqDg7yUjbXiufyrmJT8V/20YXl4YLC0Xz+QoMvKXZpO0oPQ40wH5zlLkorihTUeC811e6XGIHxAeHLPDjYqdaKUsANkKQzBUztf+jQxPf7A3ztYtwQ8hei6opCi2vnBJyz4Dp41C19YZ0tlWBI1edR8d4XI3DyOd2kU5zfQzf2kb4lvZ21/2rk3jqIQ1oI4mkB4kqf0ENjXPQ0osjQICiUa5UFcNwi5WT8FcoffimQJxhzKikxIwD0wggBINSvuB2R1qXgJt4zsXM2OtTxO3PHAcSTmKxsYMg0MB0aBGYtOk0LEhVUZYOnM2M7y4hyBTbqa15z210tx4oEZKD+EExYz+vaX57G4zVPLkk+b17oVaf8wJ9IzpVZg/7cZtF4YD2nckcOGdIHddBvFExdbdWeckDltZZjfaoeAU1FDc7BaRLGz+b/USC+YpbeF9pVnFdPjRX77GLYZlSeWKP/wGxmTXbv53jgg9gMJ6TA2plmjelyeYq+vPnpWKMZ56Z7qq9H+dPiRkse+Mdog5+IIzr0QbvfYuIBK5Dmnv5cdQFBHrru5ATvtbyhiK68H/WOG5ZDjUumDu4/4U5spvDYT0bWpzggAyKZ7v5CfTPpBztJ+hzRNPTJqXPNK6ajfHszIJz23M1w1cfnaVBH+GownzcQXI+7+6ZNzDKFnVVCsRgl6nUw4IwxtLCvv3R40O57gqAUFFrp9aFC2M36POocJtEhsiUiCjkDmTiXH0fKOygiRR/SP7SX1s0x+637JVGLSkPt0h/LtSURNLLiOs+QMGUSrW99AmKbIY9mhCVyX3kJd5KX65YBw+UsgiHhvETYFEeiFqvPR42zpy896tDZ/Diahubd0+ecj1gl90zigVXIt3APtSPEbaSIzInsjuBsPZTlY9+VhFfRZVhIvlrHisASXkCQLeE9O01mM9UQ3leN1ykHI3gkHyFem66teejySNS4Ix1sHW6eWcCFiDlnqvDLhdL0tSjmOFGpIN13rccRq+IPKXH84uYP006irgON/TPvskkkJY1KKmA4+gl33JE0ZfUFZIWUBWqCTOtfMSFIQYabnYcvB7xkxG/GhgnpzrNl7exfsgXj//s6pcbBBgPLC21U4nsYFCyrzRBi4vSkZepfYsGHfSMu064Yz9J/biyuo4+ioBtoqjybJ8xlSAx9atSi7Bq2LWoKOs8Ec1JYyzkvSq/n3l2QMipO9HbZNb9ttxzkiwR7+eUvG0yThrJSLqKfnLa8bs2DA2tO6yKLH4sK/IuDR2lNHpUuyitHLp8Tb6NlDGzyEPP0JVqHzsN9LOaRRL6jAMh2JmHJgnKKj1MYwz+AOcm4Dp3bBadJLfbPz1Br+SY+glB3vWMiHd1QJzR4n/NWnVXQ8ijDpgBKbK4GizTYGYr3xWymfuMu0WHoD06ZNFpnrTT2Nr6q3/Nopoy3vsqt6ir/eFWajMdrBPP6o4AnmXkX2XDdBoeGpxjIWkU9jq5QgeID/gR59jnK+M1ozajIuoqr40sqhYQ48PmZlpHhv3Wl6Hwf9ekpQxSFghUEAVNMJmsreqWGBOPcdqBdCBgOhgbsqzILZF0teM+pmAA8us4JWKVd/aczY/WG3ftJoBLV5TD8xGBgAtiXSH7H9gYufpxiS/KrO8+wxv3dFFB7dINfyCv4UaAkW6qT3bPECAv4Sq3mJ9ZU2DUJ67Ul9WyEjzWcp7jfg2Caps+V+/MiqxHcRvhzdeQTN2+DNkPCcF2HCiZ3u//Ru39CnRHYsdknCdsr2m58UE8mVP5sUlJtb36oDjRsZa4eNSu4WAWQwqCU5khj4ITOpZOBCevYa1mOSiZiaOXOPhDLdoB4HqSVl4wt+huI4ZjGDFuDAECv5pZ5j4UHS676X2rjqA92W9IAa3a8pdqPDlPK8VwYGTR29JyzM1zhIL0Twct3SeODStyQYzF6GLOsuXvLqlhzDZ4lPXQJhL8getKi7X4FoFaiDlDinyitU1BCYwPDaHXHp3nURDso4sRT001mikkp1Q4m7ErBo6X/gXdi87E6WjOhX2mc+kRWZT6V4LzSyVqQwxFAlZb3m9UxFb2gxTaF6uDURQCc+KflxcjhwIgifQ=
              tasks:
                - fetch:
                    pipeline: Java-Build
                    stage: package
                    job: distro
                    source: deploy
                - exec:
                    working_directory: deploy
                    command: /bin/sh
                    arguments:
                      - -c
                      - (curl -sSfL https://github.com/getgauge/gauge/raw/master/build/github_release.sh | sh)
      - publish-jar-to-mvn:
          approval: manual
          clean_workspace: true
          jobs:
            deploy:
              elastic_profile_id: centos-all
              secure_variables:
                passphrase: AES:GB8VQc3uKy4xPAHwI9+jfA==:YlkGQ/wQV3/KHn8CCI/iIw==
                gpgkey: AES:XvAOY1avy+WAvNJgQ1lH1w==:o9HOkEP7TrPNx3oGCesz+Q==
                MAVEN_GPG_SIGN_KEY: AES:kcGtcDgS2y/jBoTR1EeLaQ==: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
              tasks:
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - echo -e "$MAVEN_GPG_SIGN_KEY" | gpg --import -
                - fetch:
                    pipeline:  Java-Build
                    stage: build
                    job: compile_and_unit_test
                    source: gauge-java
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - (gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys $gpgkey)
                - exec:
                    working_directory: gauge-java
                    command: /bin/sh
                    arguments:
                      - -c
                      - (go run make.go)
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - mkdir -p $HOME/.m2 && echo -e "<settings>\n<servers>\n<server>\n<id>ossrh</id>\n<username>$username</username>\n<password>$password</password>\n</server>\n</servers>\n</settings>" > $HOME/.m2/settings.xml
                - exec:
                    working_directory: gauge-java
                    command: /bin/sh
                    arguments:
                      - -c
                      - (mvn clean deploy -Dgpg.passphrase=$passphrase)
  Java-LSP-Tests:
    group: Gauge-Java
    materials:
      gauge-lsp-tests:
        git: https://github.com/getgauge/gauge-lsp-tests
        shallow_clone: true
      gauge-package:
        pipeline: Gauge-Build
        stage: windows
      Java-Package:
        pipeline: Java-Build
        stage: package
    stages:
      - wd:
          clean_workspace: true
          jobs:
            linux:
              elastic_profile_id: centos-jdk-mvn-node
              environment_variables:
                GAUGE_ROOT: /tmp/gauge_root
              tasks:
                - fetch:
                    pipeline: Gauge-Build
                    stage: windows
                    job: sign
                    source:  test_installers/gauge-linux.x86_64.zip
                    is_file: yes
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - mkdir -p $GAUGE_ROOT/bin && unzip gauge-linux.x86_64.zip -d $GAUGE_ROOT/bin
                - fetch:
                    pipeline:  Java-Build
                    stage: package
                    job: distro
                    source: deploy
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - ($GAUGE_ROOT/bin/gauge uninstall java)
                - exec:
                    working_directory: deploy
                    command: /bin/sh
                    arguments:
                      - -c
                      - (version=$(ls gauge-java-*-linux.x86_64.zip | sed "s/^gauge-java-\([^;]*\)-linux.x86_64.zip/\1/"); $GAUGE_ROOT/bin/gauge install java -f gauge-java-$version-linux.x86_64.zip)
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - PATH=$GAUGE_ROOT/bin:$PATH gauge config gauge_repository_url https://raw.githubusercontent.com/getgauge/gauge-nightly-repository/master
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - npm install
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - ($GAUGE_ROOT/bin/gauge install && $GAUGE_ROOT/bin/gauge version)
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - PATH=$PATH:$GAUGE_ROOT/bin gauge run --tags='!knownIssue & (actions_on_project_load | actions_on_file_edit)' --env=java-wd
              artifacts:
                - build:
                    source: logs
                    destination: logs
            windows:
              elastic_profile_id: windows-all
              environment_variables:
                GAUGE_ROOT: C:/gauge_root
              tasks:
                - fetch:
                    pipeline: Gauge-Build
                    stage: windows
                    job: sign
                    source:  test_installers/gauge-windows.x86_64.zip
                    is_file: yes
                - exec:
                    command: cmd
                    arguments:
                      - /c
                      - unzip -o gauge-windows.x86_64.zip -d %GAUGE_ROOT%
                - exec:
                    command: cmd
                    arguments:
                      - /c
                      - (%GAUGE_ROOT%/gauge uninstall java)
                - fetch:
                    pipeline: Java-Build
                    stage: package
                    job: distro
                    source: deploy
                - exec:
                    working_directory: deploy
                    command: cmd
                    arguments:
                      -  /c
                      - "for %f in (gauge-java-*-windows.x86_64.zip) do %GAUGE_ROOT%/gauge install java -f %f"
                - exec:
                    command: cmd
                    arguments:
                      - /c
                      - path %GAUGE_ROOT%;%PATH% & gauge config gauge_repository_url https://raw.githubusercontent.com/getgauge/gauge-nightly-repository/master
                - exec:
                    command: cmd
                    arguments:
                      - /c
                      - npm install
                - exec:
                    command: cmd
                    arguments:
                      - /c
                      - "%GAUGE_ROOT%/gauge install & %GAUGE_ROOT%/gauge version"
                - exec:
                    command: powershell.exe
                    arguments:
                    - "./exec_windows_load.ps1 -gauge_env java-wd"
              artifacts:
                - build:
                    source: logs
                    destination: logs
      - no-wd:
          clean_workspace: true
          jobs:
            linux:
              elastic_profile_id: centos-jdk-mvn-node
              environment_variables:
                GAUGE_ROOT: /tmp/gauge_root
              tasks:
                - fetch:
                    pipeline: Gauge-Build
                    stage: windows
                    job: sign
                    source:  test_installers/gauge-linux.x86_64.zip
                    is_file: yes
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - mkdir -p $GAUGE_ROOT/bin && unzip gauge-linux.x86_64.zip -d $GAUGE_ROOT/bin
                - fetch:
                    pipeline:  Java-Build
                    stage: package
                    job: distro
                    source: deploy
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - ($GAUGE_ROOT/bin/gauge uninstall java)
                - exec:
                    working_directory: deploy
                    command: /bin/sh
                    arguments:
                      - -c
                      - (version=$(ls gauge-java-*-linux.x86_64.zip | sed "s/^gauge-java-\([^;]*\)-linux.x86_64.zip/\1/"); $GAUGE_ROOT/bin/gauge install java -f gauge-java-$version-linux.x86_64.zip)
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - PATH=$GAUGE_ROOT/bin:$PATH gauge config gauge_repository_url https://raw.githubusercontent.com/getgauge/gauge-nightly-repository/master
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - npm install
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - ($GAUGE_ROOT/bin/gauge install && $GAUGE_ROOT/bin/gauge version)
                - exec:
                    command: /bin/sh
                    arguments:
                      - -c
                      - PATH=$PATH:$GAUGE_ROOT/bin gauge run --tags='!knownIssue & (actions_on_project_load | actions_on_file_edit)' --env=java-no-wd
              artifacts:
                - build:
                    source: logs
                    destination: logs
            windows:
              elastic_profile_id: windows-all
              environment_variables:
                GAUGE_ROOT: C:/gauge_root
              tasks:
                - fetch:
                    pipeline: Gauge-Build
                    stage: windows
                    job: sign
                    source:  test_installers/gauge-windows.x86_64.zip
                    is_file: yes
                - exec:
                    command: cmd
                    arguments:
                      - /c
                      - unzip -o gauge-windows.x86_64.zip -d %GAUGE_ROOT%
                - exec:
                    command: cmd
                    arguments:
                      - /c
                      - (%GAUGE_ROOT%/gauge uninstall java)
                - fetch:
                    pipeline: Java-Build
                    stage: package
                    job: distro
                    source: deploy
                - exec:
                    working_directory: deploy
                    command: cmd
                    arguments:
                      -  /c
                      - "for %f in (gauge-java-*-windows.x86_64.zip) do %GAUGE_ROOT%/gauge install java -f %f"
                - exec:
                    command: cmd
                    arguments:
                      - /c
                      - path %GAUGE_ROOT%;%PATH% & gauge config gauge_repository_url https://raw.githubusercontent.com/getgauge/gauge-nightly-repository/master
                - exec:
                    command: cmd
                    arguments:
                      - /c
                      - npm install
                - exec:
                    command: cmd
                    arguments:
                      - /c
                      - "%GAUGE_ROOT%/gauge install & %GAUGE_ROOT%/gauge version"
                - exec:
                    command: powershell.exe
                    arguments:
                      - "./exec_windows_load.ps1 -gauge_env java-no-wd"
              artifacts:
                - build:
                    source: logs
                    destination: logs